
/* RTL Support - Selective approach */
.rtl {
  direction: rtl;
}

/* Text alignment - centered approach */
.rtl p,
.rtl h1, 
.rtl h2, 
.rtl h3, 
.rtl h4, 
.rtl h5, 
.rtl h6,
.rtl li,
.rtl label,
.rtl .rtl-text {
  /* Removed text-align: right to keep text centered */
}

/* Prevent centered items from being affected by RTL */
.text-center,
.items-center,
.justify-center,
.mx-auto {
  /* These classes remain unaffected by RTL direction */
}

/* Form Controls - only direction */
.rtl .radix-select-trigger,
.rtl .radix-select-content,
.rtl .radix-select-item,
.rtl input, 
.rtl textarea {
  text-align: right;
}

/* Base utility classes for RTL text alignment without layout inversion */
.rtl-text {
  @apply rtl:text-right ltr:text-left;
}

/* Ensure layout remains consistent regardless of language */
.centered-content {
  @apply mx-auto text-center;
}

/* Prevent grid layout inversion in RTL mode */
.rtl .grid {
  direction: ltr; /* Keep grid layout the same in both RTL and LTR */
}

/* But make the text inside grid items respect RTL */
.rtl .grid > * {
  direction: rtl;
}

/* Ensure stat cards maintain their layout */
.rtl .stat-card {
  direction: rtl;
}

/* Ensure centered components stay centered in both RTL and LTR */
.flex.justify-center,
.flex.items-center,
.grid.place-items-center,
.text-center {
  /* These will appear the same in both RTL and LTR modes */
}

/* Apply RTL-friendly tweaks to the navbar */
.rtl nav .container {
  direction: ltr; /* Keep navigation layout consistent */
}

.rtl nav .container span {
  direction: rtl; /* But allow text to follow RTL */
}
